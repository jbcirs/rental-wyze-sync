name: Azure Function Deploy
concurrency:
  group: deploy
  cancel-in-progress: false

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_FUNCTIONAPP_NAME: 'sync-locks-functions'
      AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src'
      AZURE_FUNCTIONAPP_RESOURCE_GROUP: 'sync-locks'
      PYTHON_VERSION: '3.9'                           
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VAR_hospitable_email: ${{ secrets.HOSPITABLE_EMAIL }}
      TF_VAR_hospitable_password: ${{ secrets.HOSPITABLE_PASSWORD }}
      TF_VAR_wyze_email: ${{ secrets.WYZE_EMAIL }}
      TF_VAR_wyze_password: ${{ secrets.WYZE_PASSWORD }}
      TF_VAR_wyze_key_id: ${{ secrets.WYZE_KEY_ID }}
      TF_VAR_wyze_api_key: ${{ secrets.WYZE_API_KEY }}
      TF_VAR_slack_token: ${{ secrets.SLACK_TOKEN }}
      TF_VAR_aad_objectId_admin: ${{ secrets.AAD_OBJECTID_ADMIN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip Functions Src code
        run: |
          rm -rf temp src.zip && mkdir temp && cp -r ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/* temp

      - name: Package Functions
        run: |
          docker run --rm --mount type=bind,src=$(pwd)/temp,target=/app python:${{ env.PYTHON_VERSION }} /bin/sh -c 'apt update && apt install git -y && pip3 install -r /app/requirements.txt -t /app'
          cd temp
          rm requirements.txt
          zip -rq ../src.zip ./*
          cd ..

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Az CLI login
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

      - name: Get Publish Profile
        id: getPublishProfile
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az functionapp deployment list-publishing-profiles --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_FUNCTIONAPP_RESOURCE_GROUP }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --query '[0].publishUrl' -o tsv > functions.publishsettings

      - name: Deploy Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: src.zip
          publish-profile: ${{ steps.getPublishProfile.outputs.publishUrl }}
